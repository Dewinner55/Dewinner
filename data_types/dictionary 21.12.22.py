# obj = ["john", "snow", 24, 500, "+9967000001234", "winterfel"]
# obj = {"name": "john", "last_name": "snow", "age": 24, "cash": 500, "number": "+9007000001234", "city": "winterfel"}
# print(obj["name"])
"--------------------------------------------------------------------------------------------------------------------------"
"--------------------------------------------------------------------------------------------------------------------------"
# dict()-словарь -> упорядоченная коллекция элементов(python 3.7 - > ordered). Каждый элемент внутри словаря содержиться в аре ключ: значение.
# ключи должны быть не изменяемым типом данных(str, int, tuple и.т.д.), тогда как значениями могут выступать любые типы данных.
# thisdict = {"brand": "Ford", "model": "mistang", "year": 1964}
# print(thisdict)
# print(type(thisdict))
"--------------------------------------------------------------------------------------------------------------------------"
"--------------------------------------------------------------------------------------------------------------------------"
# ассоциативный массив, hash tabl, object(js), "structure == dictionary(py)"
"--------------------------------------------------------------------------------------------------------------------------"
"--------------------------------------------------------------------------------------------------------------------------"
# user_info = {"first_name": "john", "last_name": "snow", "age": 23, "email": "johnsnow@23.com", "role": "moderator"}
# print(user_info)
# print(user_info.get("first_name")) # можнo обратится к обекту через ключ используя МЕТОД .get
# print(user_info["first_name"]) # можно обратится к обекту через квадратные скобки
# print(user_info.get("first_name1")) # если обратится к не существующему ключу то выйдет ошибка # None
# print(user_info["first_name1"]) # если обратится к не существующему ключу то выйдет ошибка # error
"--------------------------------------------------------------------------------------------------------------------------"
"--------------------------------------------------------------------------------------------------------------------------"
# a = (1,2)
# # print(a, type(a))
# user_info = {"first_name": "john", "last_name": "snow", "age": 23, "email": "johnsnow@23.com", "role": "moderator"}
# user_info = list(user_info.values())[2]
# print(user_info) # вывести только значение
# print(list(user_info.keys())) # вывести только ключи
# print(user_info.items()) # вывести и значение и ключи
# for x in user_info.items():
#     print(x)
# for key, value in user_info.items():
#     print(key, value)
"--------------------------------------------------------------------------------------------------------------------------"
"--------------------------------------------------------------------------------------------------------------------------"
# "обозначить четные, нечетные числа, а также нечетные числы необохдимо возвести в квадрат"
# dict_={1:15,2:11,3:18,4:5,5:21}
# for key,value in dict_.items():
#     if key % 2 == 0:
#         print(key, "четное")
#     else:
#         print(key, "нечетное")
#         dict_[key] = value ** 2
# print(dict_)
"--------------------------------------------------------------------------------------------------------------------------"
"--------------------------------------------------------------------------------------------------------------------------"
# Изменение словаря
# num = {"name": "john", "age": 24}
# print(num)
# num["age"] = 23
# num["addres"] = "winterfell" # можно обновить значение используя квадратый скобки и равно
# print(num)
# num.update({"age": 18, "addres": "winterfell"}) # также можно обновить новое значение используя МЕТОД .update({})
# print(num)
"--------------------------------------------------------------------------------------------------------------------------"
"--------------------------------------------------------------------------------------------------------------------------"
# formkeys - быстрое создание словаря из ключей
# num = ["one", "two", "three"]
# x = num[::-1]
# num1 = "asdasd"
# num1 = dict.fromkeys(num)# >--------------------> dict.formkeys - это создание словаря
# print(num1)
"+++++++++++"
# num={}
# ls = list(range(1,100))
# num1=dict.fromkeys(ls, "value") # >--------------------> dict.formkeys - это создание словаря, ls - необходим чтобы словарь выдал нам заданное количество по range
# print(num1)
"--------------------------------------------------------------------------------------------------------------------------"
"--------------------------------------------------------------------------------------------------------------------------"
# setdefault - работае так же как и метод get(), но если нет такого ключа то он создаст новый
# num = {"name": "john", "age": 24}
# print(num.setdefault("age"))
# print(num.setdefault("name"))
# print(num.setdefault("address", "Moskow street"))
# print(num)
"--------------------------------------------------------------------------------------------------------------------------"
"--------------------------------------------------------------------------------------------------------------------------"
# удаление из словаря
# pop(key) - удаляет элемент по ключу
# num = {"name": "john", "last name": "snow", "address": "winterfell"}
# num.pop("address") # .pop удаляет только КЛЮЧ (удалить значение нельзя)
# removed = num.pop("address", "") # Если нужно ОСТАВИТЬ/ВЕРНУТЬ значение, но удалить КЛЮЧ                                              # print(removed)
# removed = num.popitem()[1] # .popitem  удаляет сконца элементы (ключ\значение) и возвращает их отдельно
# print(removed)
# print(num)
# print(num.pop)
"--------------------------------------------------------------------------------------------------------------------------"
"--------------------------------------------------------------------------------------------------------------------------"
# print(dir(dict)) - все методы словаря
"--------------------------------------------------------------------------------------------------------------------------"
"--------------------------------------------------------------------------------------------------------------------------"
''' num = {0:"moderator", 1:"admin", 2:"customer", 3:"vendor"}
# users = {
#         "1":{"username": "John", "role": num[1]},
#         "2":{"username": "jamie", "role": num[2]},
#         "3":{"username": "Mufasa", "role": num[3]}
#         }
# # _______________________________________________________________print(type(users)) <class 'dict'>
# # print(users.get("1")["role"])
# # print(users.get("2")["role"])
# # print(users.get("3")["role"])
product = {
        "id": 1,
        "title": "Iphone 14 Pro max",
        "description": "Lorem Ipsum",
        "price": 200
        }
# ______________________________________________________________print(type(product)) <class 'dict'>
x = "1"
while x == "1" or x =="2":
    # __________________________________________________________print(type(x)) <class 'str'>
    x = input("Введите что хотите сделать:\nЕсли хотите просмотреть товар то нажмите 1\nЕсли хоитет изменить товар то нажмите 2\nЕсли хоитите выйти нажмите 3 или что то другое\nВвести ваш выбор: ")
    if x =="1":
        print(product)
    elif x == "2":
        id_user = input("\nВведите ваш ID")
        #_______________________________________________________print(type(id_user)) <class 'str'>
        if not users.get(id_user):
            print("Нет такого пользовтаеля!")
        elif users.get(id_user)["role"] != num[1]:
            print("нет доступа")
        elif users.get(id_user)["role"] == num[1]:
            #___________________________________________________print(type(users.get)) <class 'builtin_function_or_method'>
            choise = input("Введите что изменить(title, description, price,): ")
            #
            new = input(f"\nВведите новое значение{choise}: ")
            product.update({choise: new})
            print("Updated!")
        else:
            print("Вы успешно вышли")
'''

# a = {'a': 1, 'b': 4, 'c': 1, 'd': 5, 'e': 6}
# b = {}
# for k, v in a.items():
#     if v%2==0:
#         b.setdefault(k, 2)
# print("".join)

# print(dir(dict))

a = {'apple': 2, 'orange': 5, 'banana': 10}
res = a
print(id(a))
print(id(res))
